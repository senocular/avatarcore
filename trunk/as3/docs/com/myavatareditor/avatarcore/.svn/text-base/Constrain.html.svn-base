<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><!-- saved from url=(0014)about:internet --><html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><link rel="stylesheet" href="../../../style.css" type="text/css" media="screen"><link rel="stylesheet" href="../../../print.css" type="text/css" media="print"><link rel="stylesheet" href="../../../override.css" type="text/css"><meta name="keywords" content="Constrain,com.myavatareditor.avatarcore.Constrain,CURRENT_VERSION,LIBRARY_CHANGED,REBUILD,X_AXIS,Y_AXIS,a,aM,adjust,adjustName,adjustSet,art,artName,artSet,artStyle,autoRedraw,avatar,axis,b,bM,baseAdjust,behaviors,collection,collection,color,colorName,colorSet,colorize,colorize,defaultAdjust,defaultArt,defaultColor,defaultName,defaultStyleName,definition,flipX,flipY,g,gM,itemCount,itemCount,library,library,libraryName,max,meta,meta,min,name,name,name,name,name,name,name,name,name,nameKey,parent,parentCount,parentName,parentName,r,rM,requireUniqueNames,rotation,rotation,scale,scale,scaleX,scaleX,scaleY,scaleY,smoothing,smoothing,span,src,stepSpan,steps,style,suppressDraw,suppressEvents,suppressEvents,thumbnail,thumbnail,x,x,x,y,y,y,zIndex,zIndex,add,addItem,addItem,addItem,addItem,addItem,addItem,addItem,applyArtSpriteBehavior,applyArtSpriteParentTransform,assignDefaults,clamp,clearCollection,clearCollection,clone,clone,clone,clone,clone,clone,clone,clone,clone,clone,clone,clone,clone,clone,clone,clone,clone,collectionItemExists,collectionItemExists,consolidate,consolidateFeatures,copyCollectionFrom,copyCollectionFrom,copyValue,dispatchEvent,dispatchEvent,drawArtSprite,drawArtSprite,drawArtSprite,drawArtSprite,getArtSprites,getArtSprites,getArtSprites,getArtSprites,getConcatenatedParentMatrix,getDefaultPropertiesInXML,getDefaultPropertiesInXML,getDefaultPropertiesInXML,getDefaultPropertiesInXML,getDefaultPropertiesInXML,getDefaultPropertiesInXML,getItemByName,getItemByName,getItemsByType,getItemsByType,getMatrix,getObjectAsXML,getObjectAsXML,getObjectAsXML,getObjectAsXML,getObjectAsXML,getPropertiesAsAttributesInXML,getPropertiesAsAttributesInXML,getPropertiesAsAttributesInXML,getPropertiesAsAttributesInXML,getPropertiesAsAttributesInXML,getPropertiesAsAttributesInXML,getPropertiesAsAttributesInXML,getPropertiesAsAttributesInXML,getPropertiesIgnoredByXML,getPropertiesIgnoredByXML,getPropertiesIgnoredByXML,getPropertiesIgnoredByXML,getPropertiesIgnoredByXML,getPropertiesIgnoredByXML,getPropertiesIgnoredByXML,getPropertiesIgnoredByXML,getRenderedAdjust,getRenderedArt,getRenderedArtStyle,getRenderedBehaviors,getRenderedColor,load,normalize,parse,percentAt,rebuild,redraw,redraw,redraw,redraw,removeItem,removeItem,removeItem,removeItem,removeItemByName,removeItemByName,setArtSpriteColor,setArtSpriteMatrix,stepIndex,stepValue,subtract,toString,toString,toString,toString,toString,toString,updateParentHierarchy,valueAt,valueAtStepIndex"><title>com.myavatareditor.avatarcore.Constrain</title></head><body><script language="javascript" type="text/javascript" src="../../../asdoc.js"></script><script language="javascript" type="text/javascript" src="../../../help.js"></script><script language="javascript" type="text/javascript" src="../../../cookies.js"></script><script language="javascript" type="text/javascript"><!--
				asdocTitle = 'Constrain - Avatar Core API Documentation';
				var baseRef = '../../../';
				window.onload = configPage;
			--></script>
<script type="text/javascript">
			scrollToNameAnchor();
		</script><table class="titleTable" cellpadding="0" cellspacing="0" id="titleTable" style="display:none"><tr><td class="titleTableTitle" align="left">Avatar Core API Documentation</td><td class="titleTableTopNav" align="right"><a href="../../../package-summary.html" onclick="loadClassListFrame('../../../all-classes.html')">All Packages</a>&nbsp;|&nbsp;<a href="../../../class-summary.html" onclick="loadClassListFrame('../../../all-classes.html')">All Classes</a>&nbsp;|&nbsp;<a href="../../../all-index-A.html" onclick="loadClassListFrame('../../../index-list.html')">Index</a>&nbsp;|&nbsp;<a id="framesLink1" href="../../../index.html?com/myavatareditor/avatarcore/Constrain.html&amp;com/myavatareditor/avatarcore/class-list.html">Frames</a><a id="noFramesLink1" style="display:none" href="" onclick="parent.location=document.location"> No Frames </a></td><td class="titleTableLogo" align="right" rowspan="3"><img src="../../../images/logo.jpg" class="logoImage" alt=" Adobe Logo " title=" Adobe Logo "></td></tr><tr class="titleTableRow2"><td class="titleTableSubTitle" id="subTitle" align="left">Constrain</td><td class="titleTableSubNav" id="subNav" align="right"><a href="#propertySummary">Properties</a>&nbsp;| <a href="#methodSummary">Methods</a></td></tr><tr class="titleTableRow3"><td colspan="3">&nbsp;</td></tr></table><script language="javascript" type="text/javascript" xml:space="preserve">
				<!--
				
					if (!isEclipse() || window.name != ECLIPSE_FRAME_NAME) {titleBar_setSubTitle("Constrain"); titleBar_setSubNav(false,true,false	,false,false,false,true,false,false	,false,false,false,false,false);}	
				-->
			</script><div xmlns:fn="http://www.w3.org/2005/xpath-functions" class="MainContent"><table class="classHeaderTable" cellpadding="0" cellspacing="0"><tr><td class="classHeaderTableLabel">Package</td><td><a href="package-detail.html" onclick="javascript:loadClassListFrame('class-list.html')">com.myavatareditor.avatarcore</a></td></tr><tr><td class="classHeaderTableLabel">Class</td><td class="classSignature">public  class  Constrain</td></tr><tr><td class="classHeaderTableLabel">Inheritance</td><td class="inheritanceList">Constrain  <img src="../../../images/inherit-arrow.gif" title="Inheritance" alt="Inheritance" class="inheritArrow"> Object</td></tr><tr><td class="classHeaderTableLabel">Implements</td><td> <a href="../../../com/myavatareditor/avatarcore/IBehavior.html">IBehavior</a></td></tr></table><p></p><p></p><p></p>
	 An adjustment (position, scale, and rotation) constraint
	 behavior for features.  Constrains are applied to all art
	 assets in an art group as though they were one. 
	 <p></p><br/><hr></div><a name="propertySummary"></a><div class="summarySection"><div class="summaryTableTitle">Public Properties</div><table cellspacing="0" cellpadding="3" class="summaryTable " id="summaryTableProperty"><tr><th>&nbsp;</th><th colspan="2">Property</th><th class="summaryTableOwnerCol">Defined By</th></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#name" class="signatureLink">name</a> : String<div class="summaryTableDescription">
		 The name of the Constrain instance so that it can be easily
		 referenced in a behaviors collection.</div></td><td class="summaryTableOwnerCol">Constrain</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#rotation" class="signatureLink">rotation</a> : <a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a><div class="summaryTableDescription">
		 The possible range of rotation values for art sprites.</div></td><td class="summaryTableOwnerCol">Constrain</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#scale" class="signatureLink">scale</a> : <a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a><div class="summaryTableDescription">
		 An alternate Range object representing both the scaleX and scaleY
		 ranges to be used within a Constrain in place of scaleX and scaleY
		 when defined (non-null).</div></td><td class="summaryTableOwnerCol">Constrain</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#scaleX" class="signatureLink">scaleX</a> : <a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a><div class="summaryTableDescription">
		 The possible range of scaleX values for art sprites.</div></td><td class="summaryTableOwnerCol">Constrain</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#scaleY" class="signatureLink">scaleY</a> : <a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a><div class="summaryTableDescription">
		 The possible range of scaleY values for art sprites.</div></td><td class="summaryTableOwnerCol">Constrain</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#x" class="signatureLink">x</a> : <a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a><div class="summaryTableDescription">
		 The possible range of x values for art sprites.</div></td><td class="summaryTableOwnerCol">Constrain</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#y" class="signatureLink">y</a> : <a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a><div class="summaryTableDescription">
		 The possible range of y values for art sprites.</div></td><td class="summaryTableOwnerCol">Constrain</td></tr></table></div><a name="methodSummary"></a><div class="summarySection"><div class="summaryTableTitle">Public Methods </div><table cellspacing="0" cellpadding="3" class="summaryTable " id="summaryTableMethod"><tr><th>&nbsp;</th><th colspan="2">Method</th><th class="summaryTableOwnerCol">Defined By</th></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#Constrain()" class="signatureLink">Constrain</a>(x:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a> = null, y:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a> = null, scaleX:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a> = null, scaleY:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a> = null, rotation:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a> = null)</div><div class="summaryTableDescription">
		 Constructor for creating new Constraint instances.</div></td><td class="summaryTableOwnerCol">Constrain</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#clone()" class="signatureLink">clone</a>(copyInto:Object = null):Object</div><div class="summaryTableDescription">
		 Creates and returns a copy of the Constrain object.</div></td><td class="summaryTableOwnerCol">Constrain</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#drawArtSprite()" class="signatureLink">drawArtSprite</a>(artSprite:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a>):void</div><div class="summaryTableDescription">
		 Confines sprites within the region specified by the 
		 constrain properties.</div></td><td class="summaryTableOwnerCol">Constrain</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getArtSprites()" class="signatureLink">getArtSprites</a>(feature:<a href="../../../com/myavatareditor/avatarcore/Feature.html">Feature</a>, sprites:Array):Array</div><div class="summaryTableDescription">
		 Returns the same sprites defined by the feature.</div></td><td class="summaryTableOwnerCol">Constrain</td></tr></table></div><script language="javascript" type="text/javascript"><!--
										showHideInherited();
										--></script><div class="MainContent"><div class="detailSectionHeader">Property Detail</div><a name="propertyDetail"></a><a name="name"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">name</td><td class="detailHeaderType">property</td></tr></table><div class="detailBody"><code>name:String</code>&nbsp;&nbsp;[read-write] <p></p><p></p><p>
		 The name of the Constrain instance so that it can be easily
		 referenced in a behaviors collection.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get name():String</code><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set name(value:String):void</code><br/></div><a name="propertyDetail"></a><a name="rotation"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">rotation</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>rotation:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a></code>&nbsp;&nbsp;[read-write] <p></p><p></p><p>
		 The possible range of rotation values for art sprites. When set
		 a clone of the original Range value is saved.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get rotation():<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a></code><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set rotation(value:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a>):void</code><br/></div><a name="propertyDetail"></a><a name="scale"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">scale</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>scale:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a></code>&nbsp;&nbsp;[read-write] <p></p><p></p><p>
		 An alternate Range object representing both the scaleX and scaleY
		 ranges to be used within a Constrain in place of scaleX and scaleY
		 when defined (non-null).  The scale is defined automatically, if not
		 already, whenever its value is accessed or set. When first
		 accessed in this manner, if both scaleX and scaleY is defined, scale
		 will be represent their averages. If only one is defined, scale will 
		 take on the value of that range which is defined. If both are not
		 defined (null), scale remains null until explicitly set. If at any 
		 point in time the value of scaleX or scaleY is set or accessed,
		 scale automatically becomes null.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get scale():<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a></code><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set scale(value:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a>):void</code><br/></div><a name="propertyDetail"></a><a name="scaleX"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">scaleX</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>scaleX:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a></code>&nbsp;&nbsp;[read-write] <p></p><p></p><p>
		 The possible range of scaleX values for art sprites. Scale
		 constraints are calculated based on absolute values
		 where both negative and positive scales are constrained
		 within the positive ranges of the range value
		 (with negative scales remaining negative). When set
		 a clone of the original Range value is saved.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get scaleX():<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a></code><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set scaleX(value:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a>):void</code><br/></div><a name="propertyDetail"></a><a name="scaleY"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">scaleY</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>scaleY:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a></code>&nbsp;&nbsp;[read-write] <p></p><p></p><p>
		 The possible range of scaleY values for art sprites. Scale
		 constraints are calculated based on absolute values
		 where both negative and positive scales are constrained
		 within the positive ranges of the range value
		 (with negative scales remaining negative). When set
		 a clone of the original Range value is saved.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get scaleY():<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a></code><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set scaleY(value:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a>):void</code><br/></div><a name="propertyDetail"></a><a name="x"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">x</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>x:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a></code>&nbsp;&nbsp;[read-write] <p></p><p></p><p>
		 The possible range of x values for art sprites. When set
		 a clone of the original Range value is saved.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get x():<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a></code><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set x(value:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a>):void</code><br/></div><a name="propertyDetail"></a><a name="y"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">y</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>y:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a></code>&nbsp;&nbsp;[read-write] <p></p><p></p><p>
		 The possible range of y values for art sprites. When set
		 a clone of the original Range value is saved.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get y():<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a></code><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set y(value:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a>):void</code><br/></div><a name="constructorDetail"></a><div class="detailSectionHeader">Constructor Detail</div><a name="Constrain()"></a><a name="Constrain(com.myavatareditor.avatarcore.Range,com.myavatareditor.avatarcore.Range,com.myavatareditor.avatarcore.Range,com.myavatareditor.avatarcore.Range,com.myavatareditor.avatarcore.Range)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">Constrain</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">Constructor</td></tr></table><div class="detailBody"><code>public function Constrain(x:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a> = null, y:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a> = null, scaleX:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a> = null, scaleY:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a> = null, rotation:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a> = null)</code><p></p><p>
		 Constructor for creating new Constraint instances.
		 </p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">x</span>:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a></code> (default = <code>null</code>)<code></code> &mdash; Position rectagnle value.
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a></code> (default = <code>null</code>)<code></code> &mdash; ScaleX range value.
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">scaleX</span>:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a></code> (default = <code>null</code>)<code></code> &mdash; ScaleY range value.
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">scaleY</span>:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a></code> (default = <code>null</code>)<code></code> &mdash; Rotation range value.
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">rotation</span>:<a href="../../../com/myavatareditor/avatarcore/Range.html">Range</a></code> (default = <code>null</code>)<code></code></td></tr></table></div><a name="methodDetail"></a><div class="detailSectionHeader">Method Detail</div><a name="clone()"></a><a name="clone(Object)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">clone</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td></tr></table><div class="detailBody"><code> public function clone(copyInto:Object = null):Object</code><p></p><p></p><p>
		 Creates and returns a copy of the Constrain object.
		 </p><p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">copyInto</span>:Object</code> (default = <code>null</code>)<code></code></td></tr></table></p><p></p><span class="label">Returns</span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20"></td><td><code>Object</code> &mdash; A copy of this Constrain object.
		 </td></tr></table></div><a name="drawArtSprite()"></a><a name="drawArtSprite(com.myavatareditor.avatarcore.display.ArtSprite)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">drawArtSprite</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function drawArtSprite(artSprite:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a>):void</code><p></p><p></p><p>
		 Confines sprites within the region specified by the 
		 constrain properties. This will only  work if the feature
		 is using its own adjust and not a feature definition's.
		 </p><p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">artSprite</span>:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a></code> &mdash; The art sprite being drawn.
		 </td></tr></table></p></div><a name="getArtSprites()"></a><a name="getArtSprites(com.myavatareditor.avatarcore.Feature,Array)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">getArtSprites</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function getArtSprites(feature:<a href="../../../com/myavatareditor/avatarcore/Feature.html">Feature</a>, sprites:Array):Array</code><p></p><p></p><p>
		 Returns the same sprites defined by the feature.
		 </p><p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">feature</span>:<a href="../../../com/myavatareditor/avatarcore/Feature.html">Feature</a></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">sprites</span>:Array</code></td></tr></table></p><p></p><span class="label">Returns</span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20"></td><td><code>Array</code> &mdash; 
		 </td></tr></table></div><br/><br/><hr><br/><p></p><center class="copyright"><footer></footer><br/>Sun Feb 7 2010, 10:25 PM -08:00  </center></div></body></html><!--<br/>Sun Feb 7 2010, 10:25 PM -08:00  -->