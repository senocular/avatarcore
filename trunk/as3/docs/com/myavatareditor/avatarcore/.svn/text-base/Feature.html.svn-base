<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><!-- saved from url=(0014)about:internet --><html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><link rel="stylesheet" href="../../../style.css" type="text/css" media="screen"><link rel="stylesheet" href="../../../print.css" type="text/css" media="print"><link rel="stylesheet" href="../../../override.css" type="text/css"><meta name="keywords" content="Feature,com.myavatareditor.avatarcore.Feature,CURRENT_VERSION,LIBRARY_CHANGED,REBUILD,X_AXIS,Y_AXIS,a,aM,adjust,adjustName,adjustSet,art,artName,artSet,artStyle,autoRedraw,avatar,axis,b,bM,baseAdjust,behaviors,collection,collection,color,colorName,colorSet,colorize,colorize,defaultAdjust,defaultArt,defaultColor,defaultName,defaultStyleName,definition,flipX,flipY,g,gM,itemCount,itemCount,library,library,libraryName,max,meta,meta,min,name,name,name,name,name,name,name,name,name,nameKey,parent,parentCount,parentName,parentName,r,rM,requireUniqueNames,rotation,rotation,scale,scale,scaleX,scaleX,scaleY,scaleY,smoothing,smoothing,span,src,stepSpan,steps,style,suppressDraw,suppressEvents,suppressEvents,thumbnail,thumbnail,x,x,x,y,y,y,zIndex,zIndex,add,addItem,addItem,addItem,addItem,addItem,addItem,addItem,applyArtSpriteBehavior,applyArtSpriteParentTransform,assignDefaults,clamp,clearCollection,clearCollection,clone,clone,clone,clone,clone,clone,clone,clone,clone,clone,clone,clone,clone,clone,clone,clone,clone,collectionItemExists,collectionItemExists,consolidate,consolidateFeatures,copyCollectionFrom,copyCollectionFrom,copyValue,dispatchEvent,dispatchEvent,drawArtSprite,drawArtSprite,drawArtSprite,drawArtSprite,getArtSprites,getArtSprites,getArtSprites,getArtSprites,getConcatenatedParentMatrix,getDefaultPropertiesInXML,getDefaultPropertiesInXML,getDefaultPropertiesInXML,getDefaultPropertiesInXML,getDefaultPropertiesInXML,getDefaultPropertiesInXML,getItemByName,getItemByName,getItemsByType,getItemsByType,getMatrix,getObjectAsXML,getObjectAsXML,getObjectAsXML,getObjectAsXML,getObjectAsXML,getPropertiesAsAttributesInXML,getPropertiesAsAttributesInXML,getPropertiesAsAttributesInXML,getPropertiesAsAttributesInXML,getPropertiesAsAttributesInXML,getPropertiesAsAttributesInXML,getPropertiesAsAttributesInXML,getPropertiesAsAttributesInXML,getPropertiesIgnoredByXML,getPropertiesIgnoredByXML,getPropertiesIgnoredByXML,getPropertiesIgnoredByXML,getPropertiesIgnoredByXML,getPropertiesIgnoredByXML,getPropertiesIgnoredByXML,getPropertiesIgnoredByXML,getRenderedAdjust,getRenderedArt,getRenderedArtStyle,getRenderedBehaviors,getRenderedColor,load,normalize,parse,percentAt,rebuild,redraw,redraw,redraw,redraw,removeItem,removeItem,removeItem,removeItem,removeItemByName,removeItemByName,setArtSpriteColor,setArtSpriteMatrix,stepIndex,stepValue,subtract,toString,toString,toString,toString,toString,toString,updateParentHierarchy,valueAt,valueAtStepIndex"><title>com.myavatareditor.avatarcore.Feature</title></head><body><script language="javascript" type="text/javascript" src="../../../asdoc.js"></script><script language="javascript" type="text/javascript" src="../../../help.js"></script><script language="javascript" type="text/javascript" src="../../../cookies.js"></script><script language="javascript" type="text/javascript"><!--
				asdocTitle = 'Feature - Avatar Core API Documentation';
				var baseRef = '../../../';
				window.onload = configPage;
			--></script>
<script type="text/javascript">
			scrollToNameAnchor();
		</script><table class="titleTable" cellpadding="0" cellspacing="0" id="titleTable" style="display:none"><tr><td class="titleTableTitle" align="left">Avatar Core API Documentation</td><td class="titleTableTopNav" align="right"><a href="../../../package-summary.html" onclick="loadClassListFrame('../../../all-classes.html')">All Packages</a>&nbsp;|&nbsp;<a href="../../../class-summary.html" onclick="loadClassListFrame('../../../all-classes.html')">All Classes</a>&nbsp;|&nbsp;<a href="../../../all-index-A.html" onclick="loadClassListFrame('../../../index-list.html')">Index</a>&nbsp;|&nbsp;<a id="framesLink1" href="../../../index.html?com/myavatareditor/avatarcore/Feature.html&amp;com/myavatareditor/avatarcore/class-list.html">Frames</a><a id="noFramesLink1" style="display:none" href="" onclick="parent.location=document.location"> No Frames </a></td><td class="titleTableLogo" align="right" rowspan="3"><img src="../../../images/logo.jpg" class="logoImage" alt=" Adobe Logo " title=" Adobe Logo "></td></tr><tr class="titleTableRow2"><td class="titleTableSubTitle" id="subTitle" align="left">Feature</td><td class="titleTableSubNav" id="subNav" align="right"><a href="#propertySummary">Properties</a>&nbsp;| <a href="#methodSummary">Methods</a></td></tr><tr class="titleTableRow3"><td colspan="3">&nbsp;</td></tr></table><script language="javascript" type="text/javascript" xml:space="preserve">
				<!--
				
					if (!isEclipse() || window.name != ECLIPSE_FRAME_NAME) {titleBar_setSubTitle("Feature"); titleBar_setSubNav(false,true,false	,false,false,false,true,false,false	,false,false,false,false,false);}	
				-->
			</script><div xmlns:fn="http://www.w3.org/2005/xpath-functions" class="MainContent"><table class="classHeaderTable" cellpadding="0" cellspacing="0"><tr><td class="classHeaderTableLabel">Package</td><td><a href="package-detail.html" onclick="javascript:loadClassListFrame('class-list.html')">com.myavatareditor.avatarcore</a></td></tr><tr><td class="classHeaderTableLabel">Class</td><td class="classSignature">public  class  Feature</td></tr><tr><td class="classHeaderTableLabel">Inheritance</td><td class="inheritanceList">Feature  <img src="../../../images/inherit-arrow.gif" title="Inheritance" alt="Inheritance" class="inheritArrow"> <a href="../../../com/myavatareditor/avatarcore/FeatureBase.html">FeatureBase</a> <img src="../../../images/inherit-arrow.gif" title="Inheritance" alt="Inheritance" class="inheritArrow"> Object</td></tr></table><p></p><p></p><p></p>
	 Represents a feature within an avatar.  Features describe a part
	 of an avatar and how it is represented by graphical assets and 
	 physical adjustments such as position, scale, or color. Feature
	 values can be defined directly within the feature itself or link
	 to definitions within a FeatureDefinitioninstance of a library which
	 gets associated with the feature when an avatar containing the feature
	 is linked with a Library object.
	 <p></p><br/><hr></div><a name="propertySummary"></a><div class="summarySection"><div class="summaryTableTitle">Public Properties</div><div class="showHideLinks"><div id="hideInheritedProperty" class="hideInheritedProperty"><a class="showHideLink" href="#propertySummary" onclick="javascript:setInheritedVisible(false,'Property');"><img class="showHideLinkImage" src="../../../images/expanded.gif"> Hide Inherited Public Properties</a></div><div id="showInheritedProperty" class="showInheritedProperty"><a class="showHideLink" href="#propertySummary" onclick="javascript:setInheritedVisible(true,'Property');"><img class="showHideLinkImage" src="../../../images/collapsed.gif"> Show Inherited Public Properties</a></div></div><table cellspacing="0" cellpadding="3" class="summaryTable " id="summaryTableProperty"><tr><th>&nbsp;</th><th colspan="2">Property</th><th class="summaryTableOwnerCol">Defined By</th></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#adjust" class="signatureLink">adjust</a> : <a href="../../../com/myavatareditor/avatarcore/Adjust.html">Adjust</a><div class="summaryTableDescription">
		 Adjustments (position, size, and rotation) to be applied
		 to a feature and its art.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#adjustName" class="signatureLink">adjustName</a> : String<div class="summaryTableDescription">
		 This property is a shortcut for referencing adjusts by name in a 
		 referenced library.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#art" class="signatureLink">art</a> : <a href="../../../com/myavatareditor/avatarcore/Art.html">Art</a><div class="summaryTableDescription">
		 A specific Art object to be applied to an avatar.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#artName" class="signatureLink">artName</a> : String<div class="summaryTableDescription">
		 The art name used by Features to associate themselves with
		 art in FeatureDefinition objects.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#artStyle" class="signatureLink">artStyle</a> : String<div class="summaryTableDescription">
		 Style name for this feature.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class="hideInheritedProperty"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol"><img src="../../../images/inheritedSummary.gif" alt="Inherited" title="Inherited" class="inheritedSummaryImage"></td><td class="summaryTableSignatureCol"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html#autoRedraw" class="signatureLink">autoRedraw</a> : Boolean<div class="summaryTableDescription">
		 When true, redraw() is automatically called when properties
		 are set on this instance.</div></td><td class="summaryTableOwnerCol"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html">FeatureBase</a></td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#avatar" class="signatureLink">avatar</a> : <a href="../../../com/myavatareditor/avatarcore/Avatar.html">Avatar</a><div class="summaryTableDescription">
		 The avatar that is associated with this feature.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class="hideInheritedProperty"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol"><img src="../../../images/inheritedSummary.gif" alt="Inherited" title="Inherited" class="inheritedSummaryImage"></td><td class="summaryTableSignatureCol"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html#baseAdjust" class="signatureLink">baseAdjust</a> : <a href="../../../com/myavatareditor/avatarcore/Adjust.html">Adjust</a><div class="summaryTableDescription">
		 Base adjustment on top of which other adjustments are applied.</div></td><td class="summaryTableOwnerCol"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html">FeatureBase</a></td></tr><tr class="hideInheritedProperty"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol"><img src="../../../images/inheritedSummary.gif" alt="Inherited" title="Inherited" class="inheritedSummaryImage"></td><td class="summaryTableSignatureCol"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html#behaviors" class="signatureLink">behaviors</a> : <a href="../../../com/myavatareditor/avatarcore/Collection.html">Collection</a><div class="summaryTableDescription">
		 A collection of custom behaviors that are used to help
		 determine the final render of an avatar feature.</div></td><td class="summaryTableOwnerCol"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html">FeatureBase</a></td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#color" class="signatureLink">color</a> : <a href="../../../com/myavatareditor/avatarcore/Color.html">Color</a><div class="summaryTableDescription">
		 A specific color to be applied to an avatar.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#colorName" class="signatureLink">colorName</a> : String<div class="summaryTableDescription">
		 This property is a shortcut for referencing color by name in a 
		 referenced library.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#definition" class="signatureLink">definition</a> : <a href="../../../com/myavatareditor/avatarcore/FeatureDefinition.html">FeatureDefinition</a><div class="summaryTableDescription">[read-only] 
		 The feature definition that is to be associated with this
		 Feature.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class="hideInheritedProperty"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol"><img src="../../../images/inheritedSummary.gif" alt="Inherited" title="Inherited" class="inheritedSummaryImage"></td><td class="summaryTableSignatureCol"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html#meta" class="signatureLink">meta</a> : Object<div class="summaryTableDescription">
		 Generic object for storing custom data (metadata).</div></td><td class="summaryTableOwnerCol"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html">FeatureBase</a></td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#name" class="signatureLink">name</a> : String<div class="summaryTableDescription">[write-only] 
		 Setting the name of Features automatically calls
		 updateParentHierarchy() in the associated Avatar instance
		 and redraws the feature.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#parent" class="signatureLink">parent</a> : <a href="../../../com/myavatareditor/avatarcore/Feature.html">Feature</a><div class="summaryTableDescription">
		 A reference to the parent feature referenced by parentName.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#parentCount" class="signatureLink">parentCount</a> : int<div class="summaryTableDescription">[read-only] 
		 Identifies how many parents this feature has as specified
		 by it's parent (or parentName) property.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#parentName" class="signatureLink">parentName</a> : String<div class="summaryTableDescription">[write-only] 
		 Setting the parent name for Features automatically calls
		 updateParentHierarchy() in the associated Avatar instance
		 and redraws the feature.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class="hideInheritedProperty"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol"><img src="../../../images/inheritedSummary.gif" alt="Inherited" title="Inherited" class="inheritedSummaryImage"></td><td class="summaryTableSignatureCol"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html#thumbnail" class="signatureLink">thumbnail</a> : String<div class="summaryTableDescription">
		 The source of the thumbnail to be used for previewing the
		 Feature for the user.</div></td><td class="summaryTableOwnerCol"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html">FeatureBase</a></td></tr></table></div><a name="protectedPropertySummary"></a><div class="summarySection"><div class="summaryTableTitle">Protected Properties</div><div class="showHideLinks"><div id="hideInheritedProtectedProperty" class="hideInheritedProtectedProperty"><a class="showHideLink" href="#protectedPropertySummary" onclick="javascript:setInheritedVisible(false,'ProtectedProperty');"><img class="showHideLinkImage" src="../../../images/expanded.gif"> Hide Inherited Protected Properties</a></div><div id="showInheritedProtectedProperty" class="showInheritedProtectedProperty"><a class="showHideLink" href="#protectedPropertySummary" onclick="javascript:setInheritedVisible(true,'ProtectedProperty');"><img class="showHideLinkImage" src="../../../images/collapsed.gif"> Show Inherited Protected Properties</a></div></div><table cellspacing="0" cellpadding="3" class="summaryTable hideInheritedProtectedProperty" id="summaryTableProtectedProperty"><tr><th>&nbsp;</th><th colspan="2">Property</th><th class="summaryTableOwnerCol">Defined By</th></tr><tr class="hideInheritedProtectedProperty"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol"><img src="../../../images/inheritedSummary.gif" alt="Inherited" title="Inherited" class="inheritedSummaryImage"></td><td class="summaryTableSignatureCol"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html#suppressDraw" class="signatureLink">suppressDraw</a> : Boolean = false<div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html">FeatureBase</a></td></tr></table></div><a name="methodSummary"></a><div class="summarySection"><div class="summaryTableTitle">Public Methods </div><div class="showHideLinks"><div id="hideInheritedMethod" class="hideInheritedMethod"><a class="showHideLink" href="#methodSummary" onclick="javascript:setInheritedVisible(false,'Method');"><img class="showHideLinkImage" src="../../../images/expanded.gif"> Hide Inherited Public Methods</a></div><div id="showInheritedMethod" class="showInheritedMethod"><a class="showHideLink" href="#methodSummary" onclick="javascript:setInheritedVisible(true,'Method');"><img class="showHideLinkImage" src="../../../images/collapsed.gif"> Show Inherited Public Methods</a></div></div><table cellspacing="0" cellpadding="3" class="summaryTable " id="summaryTableMethod"><tr><th>&nbsp;</th><th colspan="2">Method</th><th class="summaryTableOwnerCol">Defined By</th></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#Feature()" class="signatureLink">Feature</a>(name:String = null)</div><div class="summaryTableDescription">
		 Constructor for creating new Feature instances.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#clone()" class="signatureLink">clone</a>(copyInto:Object = null):Object</div><div class="summaryTableDescription">
		 Creates a Feature copy.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#consolidate()" class="signatureLink">consolidate</a>():void</div><div class="summaryTableDescription">
		 Copies feature characteristics (Art, Colors, Adjusts, and Behaviors)
		 from the referenced feature definition into the feature's own
		 characteristics.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#drawArtSprite()" class="signatureLink">drawArtSprite</a>(artSprite:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a>):void</div><div class="summaryTableDescription">
		 Applies feature adjustments to an art sprite.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getArtSprites()" class="signatureLink">getArtSprites</a>(sprites:Array = null):Array</div><div class="summaryTableDescription">
		 Returns the art sprites needed to represent this feature.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getConcatenatedParentMatrix()" class="signatureLink">getConcatenatedParentMatrix</a>():Matrix</div><div class="summaryTableDescription">
		 Returns the matrix representing the (pseudo) parent coordinate space
		 of the feature as determined by the adjust transforms of all parent
		 features.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class="hideInheritedMethod"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol"><img src="../../../images/inheritedSummary.gif" alt="Inherited" title="Inherited" class="inheritedSummaryImage"></td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html#getDefaultPropertiesInXML()" class="signatureLink">getDefaultPropertiesInXML</a>():Object</div><div class="summaryTableDescription">
		 
		 Specifies the default values of properties within an object.</div></td><td class="summaryTableOwnerCol"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html">FeatureBase</a></td></tr><tr class="hideInheritedMethod"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol"><img src="../../../images/inheritedSummary.gif" alt="Inherited" title="Inherited" class="inheritedSummaryImage"></td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html#getObjectAsXML()" class="signatureLink">getObjectAsXML</a>():XML</div><div class="summaryTableDescription">
		 
		 Provides an XML representation of an object being written to XML.</div></td><td class="summaryTableOwnerCol"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html">FeatureBase</a></td></tr><tr class="hideInheritedMethod"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol"><img src="../../../images/inheritedSummary.gif" alt="Inherited" title="Inherited" class="inheritedSummaryImage"></td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html#getPropertiesAsAttributesInXML()" class="signatureLink">getPropertiesAsAttributesInXML</a>():Object</div><div class="summaryTableDescription">
		 
		 Specifies which object properties are defined as attributes
		 in XML.</div></td><td class="summaryTableOwnerCol"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html">FeatureBase</a></td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getPropertiesIgnoredByXML()" class="signatureLink">getPropertiesIgnoredByXML</a>():Object</div><div class="summaryTableDescription">
		 
		 
		 Specifies which object properties are omitted from XML.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getRenderedAdjust()" class="signatureLink">getRenderedAdjust</a>():<a href="../../../com/myavatareditor/avatarcore/Adjust.html">Adjust</a></div><div class="summaryTableDescription">
		 Returns the Adjust object used by this feature to display itself
		 visually.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getRenderedArt()" class="signatureLink">getRenderedArt</a>():<a href="../../../com/myavatareditor/avatarcore/Art.html">Art</a></div><div class="summaryTableDescription">
		 Returns the Art object used by this feature to display itself
		 visually.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getRenderedArtStyle()" class="signatureLink">getRenderedArtStyle</a>():String</div><div class="summaryTableDescription">
		 Returns the Art style used by this Feature.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getRenderedBehaviors()" class="signatureLink">getRenderedBehaviors</a>():<a href="../../../com/myavatareditor/avatarcore/ICollection.html">ICollection</a></div><div class="summaryTableDescription">
		 Returns the behaviors collection being used to render this Feature
		 instance.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getRenderedColor()" class="signatureLink">getRenderedColor</a>():<a href="../../../com/myavatareditor/avatarcore/Color.html">Color</a></div><div class="summaryTableDescription">
		 Returns the Color object used by this feature to display itself
		 visually.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#redraw()" class="signatureLink">redraw</a>(originalName:String = null):void</div><div class="summaryTableDescription">
		 Indicates to Avatar stakeholders (i.e.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class="hideInheritedMethod"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol"><img src="../../../images/inheritedSummary.gif" alt="Inherited" title="Inherited" class="inheritedSummaryImage"></td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html#toString()" class="signatureLink">toString</a>():String</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol"><a href="../../../com/myavatareditor/avatarcore/FeatureBase.html">FeatureBase</a></td></tr></table></div><a name="protectedMethodSummary"></a><div class="summarySection"><div class="summaryTableTitle">Protected Methods </div><table cellspacing="0" cellpadding="3" class="summaryTable " id="summaryTableProtectedMethod"><tr><th>&nbsp;</th><th colspan="2">Method</th><th class="summaryTableOwnerCol">Defined By</th></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#applyArtSpriteBehavior()" class="signatureLink">applyArtSpriteBehavior</a>(artSprite:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a>, behavior:<a href="../../../com/myavatareditor/avatarcore/IBehavior.html">IBehavior</a>):void</div><div class="summaryTableDescription">
		 Applies a behavior to an ArtSprite.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#applyArtSpriteParentTransform()" class="signatureLink">applyArtSpriteParentTransform</a>(artSprite:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a>, parentMatrix:Matrix):void</div><div class="summaryTableDescription">
		 Applies the inherited transforms from the parent hierarchy
		 of an art sprite to an art sprite.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setArtSpriteColor()" class="signatureLink">setArtSpriteColor</a>(artSprite:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a>, color:ColorTransform):void</div><div class="summaryTableDescription">
		 Sets the color to an ArtSprite when it's being drawn.</div></td><td class="summaryTableOwnerCol">Feature</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setArtSpriteMatrix()" class="signatureLink">setArtSpriteMatrix</a>(artSprite:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a>, matrix:Matrix):void</div><div class="summaryTableDescription">
		 Sets the matrix (visual transform including position, rotation and size) 
		 to an ArtSprite when it's being drawn.</div></td><td class="summaryTableOwnerCol">Feature</td></tr></table></div><script language="javascript" type="text/javascript"><!--
										showHideInherited();
										--></script><div class="MainContent"><div class="detailSectionHeader">Property Detail</div><a name="propertyDetail"></a><a name="adjust"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">adjust</td><td class="detailHeaderType">property</td></tr></table><div class="detailBody"><code>adjust:<a href="../../../com/myavatareditor/avatarcore/Adjust.html">Adjust</a></code>&nbsp;&nbsp;[read-write] <p></p><p></p><p>
		 Adjustments (position, size, and rotation) to be applied
		 to a feature and its art.  When null, no adjustment is
		 applied (x=0, y=0, scale=1, rotation=0). If a name property is
		 defined, it can be linked to an Color definition within a 
		 respective FeatureDefinition object.  This adjust is applied
		 on top of a definitions baseAdjust if defined. When set, the
		 feature is automatically updated.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get adjust():<a href="../../../com/myavatareditor/avatarcore/Adjust.html">Adjust</a></code><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set adjust(value:<a href="../../../com/myavatareditor/avatarcore/Adjust.html">Adjust</a>):void</code><br/></div><a name="propertyDetail"></a><a name="adjustName"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">adjustName</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>adjustName:String</code>&nbsp;&nbsp;[read-write] <p></p><p></p><p>
		 This property is a shortcut for referencing adjusts by name in a 
		 referenced library. Feature.adjust.name will be used if available,
		 otherwise this value will be used to reference a FeatureDefinition's
		 Adjust in an Avatar's library. Using Feature name properties can make
		 Feature definitions simpler when libraries are being used.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get adjustName():String</code><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set adjustName(value:String):void</code><br/></div><a name="propertyDetail"></a><a name="art"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">art</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>art:<a href="../../../com/myavatareditor/avatarcore/Art.html">Art</a></code>&nbsp;&nbsp;[read-write] <p></p><p></p><p>
		 A specific Art object to be applied to an avatar. This can contain
		 an Art definition or, if a name property is defined, be linked
		 to an Art definition within a respective FeatureDefinition object.
		 When set, the feature is automatically updated.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get art():<a href="../../../com/myavatareditor/avatarcore/Art.html">Art</a></code><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set art(value:<a href="../../../com/myavatareditor/avatarcore/Art.html">Art</a>):void</code><br/></div><a name="propertyDetail"></a><a name="artName"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">artName</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>artName:String</code>&nbsp;&nbsp;[read-write] <p></p><p></p><p>
		 The art name used by Features to associate themselves with
		 art in FeatureDefinition objects. This value does not have 
		 precedence over Feature.art.name if available, however will
		 be used if this Feature has no art value.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get artName():String</code><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set artName(value:String):void</code><br/></div><a name="propertyDetail"></a><a name="artStyle"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">artStyle</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>artStyle:String</code>&nbsp;&nbsp;[read-write] <p></p><p></p><p>
		 Style name for this feature.  When defined, art associated
		 with this feature must be of the same style to be visible.
		 When set, the feature is automatically updated. artStyle is
		 an optional helper method that is ignored when not used. It
		 only applies when Art instances used by this feature have
		 for them a defined Art.style property.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get artStyle():String</code><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set artStyle(value:String):void</code><br/></div><a name="propertyDetail"></a><a name="avatar"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">avatar</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>avatar:<a href="../../../com/myavatareditor/avatarcore/Avatar.html">Avatar</a></code>&nbsp;&nbsp;[read-write] <p></p><p></p><p>
		 The avatar that is associated with this feature.  This is 
		 set automatically when the feature is added to an avatar
		 through Avatar.addItem(). This property serves as a reference
		 to the avatar instance in that relationship. Each Feature
		 can only exist within one Avatar at a time.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get avatar():<a href="../../../com/myavatareditor/avatarcore/Avatar.html">Avatar</a></code><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set avatar(value:<a href="../../../com/myavatareditor/avatarcore/Avatar.html">Avatar</a>):void</code><br/></div><a name="propertyDetail"></a><a name="color"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">color</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>color:<a href="../../../com/myavatareditor/avatarcore/Color.html">Color</a></code>&nbsp;&nbsp;[read-write] <p></p><p></p><p>
		 A specific color to be applied to an avatar. This can contain
		 a Color definition or, if a name property is defined, be linked
		 to an Color definition within a respective FeatureDefinition object.
		 When set, the feature is automatically updated.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get color():<a href="../../../com/myavatareditor/avatarcore/Color.html">Color</a></code><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set color(value:<a href="../../../com/myavatareditor/avatarcore/Color.html">Color</a>):void</code><br/></div><a name="propertyDetail"></a><a name="colorName"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">colorName</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>colorName:String</code>&nbsp;&nbsp;[read-write] <p></p><p></p><p>
		 This property is a shortcut for referencing color by name in a 
		 referenced library. Feature.color.name will be used if available,
		 otherwise this value will be used to reference a FeatureDefinition's
		 Color in an Avatar's library. Using Feature name properties can make
		 Feature definitions simpler when libraries are being used.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get colorName():String</code><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set colorName(value:String):void</code><br/></div><a name="propertyDetail"></a><a name="definition"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">definition</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>definition:<a href="../../../com/myavatareditor/avatarcore/FeatureDefinition.html">FeatureDefinition</a></code>&nbsp;&nbsp;[read-only] <p></p><p></p><p>
		 The feature definition that is to be associated with this
		 Feature.  This reference is obtained directly through 
		 the associated Avatar based on the Avatar's name and
		 associated Library instance.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get definition():<a href="../../../com/myavatareditor/avatarcore/FeatureDefinition.html">FeatureDefinition</a></code><br/></div><a name="propertyDetail"></a><a name="name"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">name</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>name:String</code>&nbsp;&nbsp;[write-only] <p></p><p></p><p>
		 Setting the name of Features automatically calls
		 updateParentHierarchy() in the associated Avatar instance
		 and redraws the feature.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set name(value:String):void</code><br/></div><a name="propertyDetail"></a><a name="parent"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">parent</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>parent:<a href="../../../com/myavatareditor/avatarcore/Feature.html">Feature</a></code>&nbsp;&nbsp;[read-write] <p></p><p></p><p>
		 A reference to the parent feature referenced by parentName. This
		 is automatically set when parentName is set.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get parent():<a href="../../../com/myavatareditor/avatarcore/Feature.html">Feature</a></code><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set parent(value:<a href="../../../com/myavatareditor/avatarcore/Feature.html">Feature</a>):void</code><br/></div><a name="propertyDetail"></a><a name="parentCount"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">parentCount</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>parentCount:int</code>&nbsp;&nbsp;[read-only] <p></p><p></p><p>
		 Identifies how many parents this feature has as specified
		 by it's parent (or parentName) property.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get parentCount():int</code><br/></div><a name="propertyDetail"></a><a name="parentName"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">parentName</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>parentName:String</code>&nbsp;&nbsp;[write-only] <p></p><p></p><p>
		 Setting the parent name for Features automatically calls
		 updateParentHierarchy() in the associated Avatar instance
		 and redraws the feature.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set parentName(value:String):void</code><br/></div><a name="constructorDetail"></a><div class="detailSectionHeader">Constructor Detail</div><a name="Feature()"></a><a name="Feature(String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">Feature</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">Constructor</td></tr></table><div class="detailBody"><code>public function Feature(name:String = null)</code><p></p><p>
		 Constructor for creating new Feature instances.
		 </p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">name</span>:String</code> (default = <code>null</code>)<code></code></td></tr></table></div><a name="methodDetail"></a><div class="detailSectionHeader">Method Detail</div><a name="applyArtSpriteBehavior()"></a><a name="applyArtSpriteBehavior(com.myavatareditor.avatarcore.display.ArtSprite,com.myavatareditor.avatarcore.IBehavior)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">applyArtSpriteBehavior</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td></tr></table><div class="detailBody"><code> protected function applyArtSpriteBehavior(artSprite:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a>, behavior:<a href="../../../com/myavatareditor/avatarcore/IBehavior.html">IBehavior</a>):void</code><p></p><p></p><p>
		 Applies a behavior to an ArtSprite.  For each behavior being applied,
		 this function is called.
		 </p><p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">artSprite</span>:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a></code> &mdash; The ArtSprite being drawn.
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">behavior</span>:<a href="../../../com/myavatareditor/avatarcore/IBehavior.html">IBehavior</a></code> &mdash; The behavior being applied to the ArtSprite.
		 </td></tr></table></p></div><a name="applyArtSpriteParentTransform()"></a><a name="applyArtSpriteParentTransform(com.myavatareditor.avatarcore.display.ArtSprite,flash.geom.Matrix)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">applyArtSpriteParentTransform</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> protected function applyArtSpriteParentTransform(artSprite:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a>, parentMatrix:Matrix):void</code><p></p><p></p><p>
		 Applies the inherited transforms from the parent hierarchy
		 of an art sprite to an art sprite. Transforms inherited include
		 position and rotation. Scale or visibility is not inherited but
		 position is affected by parent scaling.
		 </p><p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">artSprite</span>:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a></code> &mdash; The ArtSprite being drawn.
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">parentMatrix</span>:Matrix</code> &mdash; A matrix representative of the compound
		 matrices of the feature's parents.
		 </td></tr></table></p></div><a name="clone()"></a><a name="clone(Object)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">clone</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>override public function clone(copyInto:Object = null):Object</code><p></p><p></p><p>
		 Creates a Feature copy.  Any associated Avatar or Definition objects
		 are not copied. These would be reassigned when the cloned feature
		 is added into a separate Avatar's collection (for example if an
		 Avatar object containing features is cloned, the cloned features
		 would be associated with the new Avatar resulting from the Avatar
		 clone and would not be responsible for creating their own copies).
		 </p><p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">copyInto</span>:Object</code> (default = <code>null</code>)<code></code></td></tr></table></p><p></p><span class="label">Returns</span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20"></td><td><code>Object</code> &mdash; A copy of this Feature instance.
		 </td></tr></table></div><a name="consolidate()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">consolidate</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function consolidate():void</code><p></p><p></p><p>
		 Copies feature characteristics (Art, Colors, Adjusts, and Behaviors)
		 from the referenced feature definition into the feature's own
		 characteristics.  This would be used to create a self-contained
		 version of the feature that would be able to be displayed 
		 without the library.
		 </p></div><a name="drawArtSprite()"></a><a name="drawArtSprite(com.myavatareditor.avatarcore.display.ArtSprite)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">drawArtSprite</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function drawArtSprite(artSprite:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a>):void</code><p></p><p></p><p>
		 Applies feature adjustments to an art sprite. This
		 is called internally by AvatarDisplay to render the sprites
		 it creates to present the avatar on screen.
		 </p><p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">artSprite</span>:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a></code> &mdash; The art sprite to apply feature
		 adjustments to.
		 </td></tr></table></p></div><a name="getArtSprites()"></a><a name="getArtSprites(Array)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">getArtSprites</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function getArtSprites(sprites:Array = null):Array</code><p></p><p></p><p>
		 Returns the art sprites needed to represent this feature.
		 This is called internally by AvatarDisplay to create the sprites
		 used to present the avatar on screen.
		 </p><p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">sprites</span>:Array</code> (default = <code>null</code>)<code></code> &mdash; Any set of pre-existing art sprites
		 assumed to be necessary for the feature.
		 </td></tr></table></p><p></p><span class="label">Returns</span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20"></td><td><code>Array</code> &mdash; An array of art sprites.
		 </td></tr></table></div><a name="getConcatenatedParentMatrix()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">getConcatenatedParentMatrix</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function getConcatenatedParentMatrix():Matrix</code><p></p><p></p><p>
		 Returns the matrix representing the (pseudo) parent coordinate space
		 of the feature as determined by the adjust transforms of all parent
		 features.  This method is used by drawArtSprite to correctly render
		 a feature's art within it's parent.
		 </p><p></p><span class="label">Returns</span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20"></td><td><code>Matrix</code> &mdash; A matrix representing the combined matrices of all the
		 parent objects.
		 </td></tr></table></div><a name="getPropertiesIgnoredByXML()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">getPropertiesIgnoredByXML</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>override public function getPropertiesIgnoredByXML():Object</code><p></p><p></p><p>
		 
		 
		 Specifies which object properties are omitted from XML.
		 If getObjectAsXML returns null, this method is used by
		 XMLDefinitionWriter to get the class members of the
		 object that are not written to XML. The object returned
		 by this method should contain the names (keys) of each
		 member not to be written.  Their values can be anything
		 but the value of 1 is typical.
		 </p><p></p><span class="label">Returns</span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20"></td><td><code>Object</code> &mdash; An object with name value pairs where the names
		 are the names of the class members not to be written to
		 XML. For example {foo:1, bar:1} means that the foo and bar
		 values of the respective instance will not be written to
		 XML.
		 </td></tr></table></div><a name="getRenderedAdjust()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">getRenderedAdjust</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function getRenderedAdjust():<a href="../../../com/myavatareditor/avatarcore/Adjust.html">Adjust</a></code><p></p><p></p><p>
		 Returns the Adjust object used by this feature to display itself
		 visually. This adjustment is a combination of any baseAdjust as well
		 as the defined adjust. This can come from one of two sources, the feature's
		 own adjust and baseAdjust definitions, or those referenced from a
		 linked FeatureDefinition instance.  If such an Adjust object does not
		 exist, a new, default Adjust instance is returned.  The adjust returned
		 by getRenderedAdjust does not account for parent adjustments.
		 </p><p></p><span class="label">Returns</span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20"></td><td><code><a href="../../../com/myavatareditor/avatarcore/Adjust.html">Adjust</a></code> &mdash; The Adjust object used by this feature to display itself
		 visually. This will never be a direct reference to a Feauture's or
		 FeatureDefinition's own Adjust object; always a new Adjust reference.
		 </td></tr></table></div><a name="getRenderedArt()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">getRenderedArt</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function getRenderedArt():<a href="../../../com/myavatareditor/avatarcore/Art.html">Art</a></code><p></p><p></p><p>
		 Returns the Art object used by this feature to display itself
		 visually.  This can come from one of two source, the feature's
		 own art definition, or a referenced Art in an artSet from a
		 linked FeatureDefinition instance.  If such an Art object does not
		 exist, null is returned.
		 </p><p></p><span class="label">Returns</span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20"></td><td><code><a href="../../../com/myavatareditor/avatarcore/Art.html">Art</a></code> &mdash; The Art object used by this feature to display itself
		 visually.
		 </td></tr></table></div><a name="getRenderedArtStyle()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">getRenderedArtStyle</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function getRenderedArtStyle():String</code><p></p><p></p><p>
		 Returns the Art style used by this Feature.  This will normally be the
		 the value of Feature.artStyle.  If that's not defined, the ArtSet of the 
		 associated FeatureDefinition is checked for a defaultStyleName value.
		 If neither is defined, null is returned.
		 </p><p></p><span class="label">Returns</span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20"></td><td><code>String</code> &mdash; A string representing the Art style used to render this Feature.
		 </td></tr></table></div><a name="getRenderedBehaviors()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">getRenderedBehaviors</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function getRenderedBehaviors():<a href="../../../com/myavatareditor/avatarcore/ICollection.html">ICollection</a></code><p></p><p></p><p>
		 Returns the behaviors collection being used to render this Feature
		 instance.  This could be either the Feature's own behaviors
		 collection or the collection referenced through the related
		 FeatureDefinition.
		 </p><p></p><span class="label">Returns</span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20"></td><td><code><a href="../../../com/myavatareditor/avatarcore/ICollection.html">ICollection</a></code> &mdash; An ICollection representative of the Feature's behaviors.
		 </td></tr></table></div><a name="getRenderedColor()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">getRenderedColor</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function getRenderedColor():<a href="../../../com/myavatareditor/avatarcore/Color.html">Color</a></code><p></p><p></p><p>
		 Returns the Color object used by this feature to display itself
		 visually.  This can come from one of two source, the feature's
		 own color definition, or a referenced Color in a colorSet from a
		 linked FeatureDefinition instance. If such a Color object does not
		 exist, a new, default Color instance is returned.
		 </p><p></p><span class="label">Returns</span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20"></td><td><code><a href="../../../com/myavatareditor/avatarcore/Color.html">Color</a></code> &mdash; The Color object used by this feature to display itself
		 visually.
		 </td></tr></table></div><a name="redraw()"></a><a name="redraw(String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">redraw</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code>override public function redraw(originalName:String = null):void</code><p></p><p></p><p>
		 Indicates to Avatar stakeholders (i.e. AvatarDisplay) that this feature
		 has been  changed.  This only applies to features contained within
		 an Avatar instance since this operation causes the containing Avatar 
		 instance to dispatch a FeatureEvent.CHANGED event so objects can react to
		 data (feature) within the avatar being modified. Unless autoRedraw is set
		 to false, this will automatically get called when properties in Feature
		 are set.
		 </p><p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">originalName</span>:String</code> (default = <code>null</code>)<code></code></td></tr></table></p></div><a name="setArtSpriteColor()"></a><a name="setArtSpriteColor(com.myavatareditor.avatarcore.display.ArtSprite,flash.geom.ColorTransform)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">setArtSpriteColor</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> protected function setArtSpriteColor(artSprite:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a>, color:ColorTransform):void</code><p></p><p></p><p>
		 Sets the color to an ArtSprite when it's being drawn.
		 </p><p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">artSprite</span>:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a></code> &mdash; The ArtSprite being drawn.
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">color</span>:ColorTransform</code> &mdash; The color information for the ArtSprite. The standard
		 behavior sets this color to ArtSprite.transform.colorTransform.
		 </td></tr></table></p></div><a name="setArtSpriteMatrix()"></a><a name="setArtSpriteMatrix(com.myavatareditor.avatarcore.display.ArtSprite,flash.geom.Matrix)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">setArtSpriteMatrix</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> protected function setArtSpriteMatrix(artSprite:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a>, matrix:Matrix):void</code><p></p><p></p><p>
		 Sets the matrix (visual transform including position, rotation and size) 
		 to an ArtSprite when it's being drawn.
		 </p><p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">artSprite</span>:<a href="../../../com/myavatareditor/avatarcore/display/ArtSprite.html">ArtSprite</a></code> &mdash; The ArtSprite being drawn.
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">matrix</span>:Matrix</code> &mdash; The transform information for the ArtSprite. The standard
		 behavior sets this matrix to ArtSprite.transform.matrix.
		 </td></tr></table></p></div><br/><br/><hr><br/><p></p><center class="copyright"><footer></footer><br/>Sun Feb 7 2010, 10:25 PM -08:00  </center></div></body></html><!--<br/>Sun Feb 7 2010, 10:25 PM -08:00  -->