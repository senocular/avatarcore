<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><!-- saved from url=(0014)about:internet --><html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><link rel="stylesheet" href="../../../../style.css" type="text/css" media="screen"><link rel="stylesheet" href="../../../../print.css" type="text/css" media="print"><link rel="stylesheet" href="../../../../override.css" type="text/css"><meta name="keywords" content="AvatarDisplay,com.myavatareditor.avatarcore.display.AvatarDisplay,DRAW,art,avatar,avatar,background,content,content,feature,feature,featureName,height,mirror,parentCount,src,srcFrame,srcURI,target,width,zIndex,addFeatureArt,capture,centerContent,clearContent,deconstruct,deconstruct,fitContent,getArtSpritesForFeature,load,load,rebuild,redraw,redraw,redraw,reload,removeFeatureArt,removeFeatureArtByName,resetContent,updateFeatureArt,updateFeatureArtByName"><title>com.myavatareditor.avatarcore.display.AvatarDisplay</title></head><body><script language="javascript" type="text/javascript" src="../../../../asdoc.js"></script><script language="javascript" type="text/javascript" src="../../../../help.js"></script><script language="javascript" type="text/javascript" src="../../../../cookies.js"></script><script language="javascript" type="text/javascript"><!--
				asdocTitle = 'AvatarDisplay - Avatar Core API Documentation';
				var baseRef = '../../../../';
				window.onload = configPage;
			--></script>
<script type="text/javascript">
			scrollToNameAnchor();
		</script><table class="titleTable" cellpadding="0" cellspacing="0" id="titleTable" style="display:none"><tr><td class="titleTableTitle" align="left">Avatar Core API Documentation</td><td class="titleTableTopNav" align="right"><a href="../../../../package-summary.html" onclick="loadClassListFrame('../../../../all-classes.html')">All Packages</a>&nbsp;|&nbsp;<a href="../../../../class-summary.html" onclick="loadClassListFrame('../../../../all-classes.html')">All Classes</a>&nbsp;|&nbsp;<a href="../../../../all-index-A.html" onclick="loadClassListFrame('../../../../index-list.html')">Index</a>&nbsp;|&nbsp;<a id="framesLink1" href="../../../../index.html?com/myavatareditor/avatarcore/display/AvatarDisplay.html&amp;com/myavatareditor/avatarcore/display/class-list.html">Frames</a><a id="noFramesLink1" style="display:none" href="" onclick="parent.location=document.location"> No Frames </a></td><td class="titleTableLogo" align="right" rowspan="3"><img src="../../../../images/logo.jpg" class="logoImage" alt=" Adobe Logo " title=" Adobe Logo "></td></tr><tr class="titleTableRow2"><td class="titleTableSubTitle" id="subTitle" align="left">AvatarDisplay</td><td class="titleTableSubNav" id="subNav" align="right"><a href="#propertySummary">Properties</a>&nbsp;| <a href="#methodSummary">Methods</a>&nbsp;| <a href="#eventSummary">Events</a>&nbsp;| <a href="#constantSummary">Constants</a></td></tr><tr class="titleTableRow3"><td colspan="3">&nbsp;</td></tr></table><script language="javascript" type="text/javascript" xml:space="preserve">
				<!--
				
					if (!isEclipse() || window.name != ECLIPSE_FRAME_NAME) {titleBar_setSubTitle("AvatarDisplay"); titleBar_setSubNav(true,true,false	,false,true,false,true,false,false	,false,false,false,false,false);}	
				-->
			</script><div xmlns:fn="http://www.w3.org/2005/xpath-functions" class="MainContent"><table class="classHeaderTable" cellpadding="0" cellspacing="0"><tr><td class="classHeaderTableLabel">Package</td><td><a href="package-detail.html" onclick="javascript:loadClassListFrame('class-list.html')">com.myavatareditor.avatarcore.display</a></td></tr><tr><td class="classHeaderTableLabel">Class</td><td class="classSignature">public  class  AvatarDisplay</td></tr><tr><td class="classHeaderTableLabel">Inheritance</td><td class="inheritanceList">AvatarDisplay  <img src="../../../../images/inherit-arrow.gif" title="Inheritance" alt="Inheritance" class="inheritArrow"> flash.display.Sprite</td></tr></table><p></p><p></p><p></p>
	 A visual container for Avatar instances.  AvatarDisplay instances
	 take an Avatar and generate the necessary ArtSprite instances
	 (added to the AvatarDisplay display list) needed to visually 
	 display an Avatar on the screen.
	 <p></p><br/><hr></div><a name="propertySummary"></a><div class="summarySection"><div class="summaryTableTitle">Public Properties</div><table cellspacing="0" cellpadding="3" class="summaryTable " id="summaryTableProperty"><tr><th>&nbsp;</th><th colspan="2">Property</th><th class="summaryTableOwnerCol">Defined By</th></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#avatar" class="signatureLink">avatar</a> : <a href="../../../../com/myavatareditor/avatarcore/Avatar.html">Avatar</a><div class="summaryTableDescription">
		 The avatar associated with the avatar art.</div></td><td class="summaryTableOwnerCol">AvatarDisplay</td></tr></table></div><a name="methodSummary"></a><div class="summarySection"><div class="summaryTableTitle">Public Methods </div><table cellspacing="0" cellpadding="3" class="summaryTable " id="summaryTableMethod"><tr><th>&nbsp;</th><th colspan="2">Method</th><th class="summaryTableOwnerCol">Defined By</th></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#AvatarDisplay()" class="signatureLink">AvatarDisplay</a>(avatar:<a href="../../../../com/myavatareditor/avatarcore/Avatar.html">Avatar</a> = null)</div><div class="summaryTableDescription">
		 Constructor for creating new AvatarDisplay instances.</div></td><td class="summaryTableOwnerCol">AvatarDisplay</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addFeatureArt()" class="signatureLink">addFeatureArt</a>(feature:<a href="../../../../com/myavatareditor/avatarcore/Feature.html">Feature</a>):void</div><div class="summaryTableDescription">
		 Adds art related to a feature to the avatar art object.</div></td><td class="summaryTableOwnerCol">AvatarDisplay</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#deconstruct()" class="signatureLink">deconstruct</a>():void</div><div class="summaryTableDescription">
		 Clears all art content from the avatar art object
		 and removes any references to other objects.</div></td><td class="summaryTableOwnerCol">AvatarDisplay</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getArtSpritesForFeature()" class="signatureLink">getArtSpritesForFeature</a>(feature:<a href="../../../../com/myavatareditor/avatarcore/Feature.html">Feature</a>):Array</div><div class="summaryTableDescription">
		 Returns all ArtSprite instances used by this ArtDisplay object
		 to display the feature provided.</div></td><td class="summaryTableOwnerCol">AvatarDisplay</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#rebuild()" class="signatureLink">rebuild</a>():void</div><div class="summaryTableDescription">
		 Completely rebuilds an avatar's art based on the
		 avatar object referenced in the avatar property.</div></td><td class="summaryTableOwnerCol">AvatarDisplay</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#redraw()" class="signatureLink">redraw</a>():void</div><div class="summaryTableDescription">
		 Draws the art sprites in the avatar art updating their
		 transformations as defined in their respective features.</div></td><td class="summaryTableOwnerCol">AvatarDisplay</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#removeFeatureArt()" class="signatureLink">removeFeatureArt</a>(feature:<a href="../../../../com/myavatareditor/avatarcore/Feature.html">Feature</a>):void</div><div class="summaryTableDescription">
		 Removes art for the feature passed from the avatar art.</div></td><td class="summaryTableOwnerCol">AvatarDisplay</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#removeFeatureArtByName()" class="signatureLink">removeFeatureArtByName</a>(featureName:String):void</div><div class="summaryTableDescription">
		 Removes art for a feature using its name to 
		 find all art of the same name and removing them from
		 the avatar art.</div></td><td class="summaryTableOwnerCol">AvatarDisplay</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#updateFeatureArt()" class="signatureLink">updateFeatureArt</a>(feature:<a href="../../../../com/myavatareditor/avatarcore/Feature.html">Feature</a>):void</div><div class="summaryTableDescription">
		 Validates a feature exists within the referenced avatar
		 and updates it on the screen.</div></td><td class="summaryTableOwnerCol">AvatarDisplay</td></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#updateFeatureArtByName()" class="signatureLink">updateFeatureArtByName</a>(featureName:String):void</div><div class="summaryTableDescription">
		 Validates a feature by a specified name exists within the referenced
		 avatar and updates it on the screen.</div></td><td class="summaryTableOwnerCol">AvatarDisplay</td></tr></table></div><a name="eventSummary"></a><div class="summarySection"><div class="summaryTableTitle">Events</div><table cellspacing="0" cellpadding="3" class="summaryTable " id="summaryTableEvent"><tr><th>&nbsp;</th><th colspan="2">Event</th><th> Summary </th><th class="summaryTableOwnerCol">Defined By</th></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#event:avatarDisplayDraw" class="signatureLink">avatarDisplayDraw</a></div></td><td class="summaryTableDescription summaryTableCol">Dispatched when the AvatarDisplay redraws itself.</td><td class="summaryTableOwnerCol">AvatarDisplay</td></tr></table></div><a name="constantSummary"></a><div class="summarySection"><div class="summaryTableTitle">Public Constants</div><table cellspacing="0" cellpadding="3" class="summaryTable " id="summaryTableConstant"><tr><th>&nbsp;</th><th colspan="2">Constant</th><th class="summaryTableOwnerCol">Defined By</th></tr><tr class=""><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#DRAW" class="signatureLink">DRAW</a> : String = avatarDisplayDraw<div class="summaryTableDescription">[static] 
		 Constant for draw event type.</div></td><td class="summaryTableOwnerCol">AvatarDisplay</td></tr></table></div><script language="javascript" type="text/javascript"><!--
										showHideInherited();
										--></script><div class="MainContent"><div class="detailSectionHeader">Property Detail</div><a name="propertyDetail"></a><a name="avatar"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">avatar</td><td class="detailHeaderType">property</td></tr></table><div class="detailBody"><code>avatar:<a href="../../../../com/myavatareditor/avatarcore/Avatar.html">Avatar</a></code>&nbsp;&nbsp;[read-write] <p></p><p></p><p>
		 The avatar associated with the avatar art. The avatar
		 art instance listens to events from the avatar object
		 to determine when to update and redraw its art sprites.
		 </p><br/><span class="label"> Implementation </span><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get avatar():<a href="../../../../com/myavatareditor/avatarcore/Avatar.html">Avatar</a></code><br/><code>&nbsp;&nbsp;&nbsp;&nbsp;public function set avatar(value:<a href="../../../../com/myavatareditor/avatarcore/Avatar.html">Avatar</a>):void</code><br/></div><a name="constructorDetail"></a><div class="detailSectionHeader">Constructor Detail</div><a name="AvatarDisplay()"></a><a name="AvatarDisplay(com.myavatareditor.avatarcore.Avatar)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">AvatarDisplay</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">Constructor</td></tr></table><div class="detailBody"><code>public function AvatarDisplay(avatar:<a href="../../../../com/myavatareditor/avatarcore/Avatar.html">Avatar</a> = null)</code><p></p><p>
		 Constructor for creating new AvatarDisplay instances.
		 </p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">avatar</span>:<a href="../../../../com/myavatareditor/avatarcore/Avatar.html">Avatar</a></code> (default = <code>null</code>)<code></code></td></tr></table></div><a name="methodDetail"></a><div class="detailSectionHeader">Method Detail</div><a name="addFeatureArt()"></a><a name="addFeatureArt(com.myavatareditor.avatarcore.Feature)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">addFeatureArt</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td></tr></table><div class="detailBody"><code> public function addFeatureArt(feature:<a href="../../../../com/myavatareditor/avatarcore/Feature.html">Feature</a>):void</code><p></p><p></p><p>
		 Adds art related to a feature to the avatar art object.
		 </p><p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">feature</span>:<a href="../../../../com/myavatareditor/avatarcore/Feature.html">Feature</a></code> &mdash; Feature for which art is to be added
		 </td></tr></table></p></div><a name="deconstruct()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">deconstruct</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function deconstruct():void</code><p></p><p></p><p>
		 Clears all art content from the avatar art object
		 and removes any references to other objects.
		 </p></div><a name="getArtSpritesForFeature()"></a><a name="getArtSpritesForFeature(com.myavatareditor.avatarcore.Feature)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">getArtSpritesForFeature</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function getArtSpritesForFeature(feature:<a href="../../../../com/myavatareditor/avatarcore/Feature.html">Feature</a>):Array</code><p></p><p></p><p>
		 Returns all ArtSprite instances used by this ArtDisplay object
		 to display the feature provided.  Each time a feature is changed
		 these sprites may change as sprites used to represent features
		 are rebuilt.
		 </p><p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">feature</span>:<a href="../../../../com/myavatareditor/avatarcore/Feature.html">Feature</a></code> &mdash; The feature for which to retrieve ArtSprites.
		 </td></tr></table></p><p></p><span class="label">Returns</span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20"></td><td><code>Array</code> &mdash; An array of ArtSprite instances whose feature matches the
		 one provided.
		 </td></tr></table></div><a name="rebuild()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">rebuild</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function rebuild():void</code><p></p><p></p><p>
		 Completely rebuilds an avatar's art based on the
		 avatar object referenced in the avatar property.
		 </p></div><a name="redraw()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">redraw</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function redraw():void</code><p></p><p></p><p>
		 Draws the art sprites in the avatar art updating their
		 transformations as defined in their respective features.
		 If a feature's art definition has changed, you should use
		 updateFeatureArt method to update that feature.  redraw()
		 will automatically be called during those updates.
		 </p></div><a name="removeFeatureArt()"></a><a name="removeFeatureArt(com.myavatareditor.avatarcore.Feature)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">removeFeatureArt</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function removeFeatureArt(feature:<a href="../../../../com/myavatareditor/avatarcore/Feature.html">Feature</a>):void</code><p></p><p></p><p>
		 Removes art for the feature passed from the avatar art.
		 </p><p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">feature</span>:<a href="../../../../com/myavatareditor/avatarcore/Feature.html">Feature</a></code> &mdash; The feature to match in art sprites
		 that need to be removed.
		 </td></tr></table></p></div><a name="removeFeatureArtByName()"></a><a name="removeFeatureArtByName(String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">removeFeatureArtByName</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function removeFeatureArtByName(featureName:String):void</code><p></p><p></p><p>
		 Removes art for a feature using its name to 
		 find all art of the same name and removing them from
		 the avatar art.
		 </p><p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">featureName</span>:String</code> &mdash; The feature name used to remove art 
		 from the avatar art object.
		 </td></tr></table></p></div><a name="updateFeatureArt()"></a><a name="updateFeatureArt(com.myavatareditor.avatarcore.Feature)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">updateFeatureArt</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function updateFeatureArt(feature:<a href="../../../../com/myavatareditor/avatarcore/Feature.html">Feature</a>):void</code><p></p><p></p><p>
		 Validates a feature exists within the referenced avatar
		 and updates it on the screen.
		 </p><p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">feature</span>:<a href="../../../../com/myavatareditor/avatarcore/Feature.html">Feature</a></code> &mdash; The feature having been modified. If the
		 feature does not exist within the avatar, no action is taken.
		 </td></tr></table></p></div><a name="updateFeatureArtByName()"></a><a name="updateFeatureArtByName(String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">updateFeatureArtByName</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></table><div class="detailBody"><code> public function updateFeatureArtByName(featureName:String):void</code><p></p><p></p><p>
		 Validates a feature by a specified name exists within the referenced
		 avatar and updates it on the screen.
		 </p><p><span class="label"> Parameters </span><table cellpadding="0" cellspacing="0" border="0"><tr><td width="20px"></td><td><code><span class="label">featureName</span>:String</code> &mdash; The name of the feature having been modified. If the
		 feature does not exist within the avatar, no action is taken.
		 </td></tr></table></p></div><div class="detailSectionHeader"> Event Detail </div><a name="event:avatarDisplayDraw"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">avatarDisplayDraw</td><td class="detailHeaderType"> Event </td></tr></table><div class="detailBody"><span class="label">Event Object Type: </span><code>flash.events.Event</code><br/><p></p><p></p><p></p><p>
	 Dispatched when the AvatarDisplay redraws itself.  This usually occurs
	 after receiving events, such as an Avatar.REBUILD or
	 FeatureEvent.CHANGED from a referenced Avatar object.
	 </p><p><span class="label">See also</span></p><div class="seeAlso"><a href="AvatarDisplay.html#draw()" target="">AvatarDisplay.draw()</a></div></div><div class="detailSectionHeader">Constant Detail</div><a name="constantDetail"></a><a name="DRAW"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tr><td class="detailHeaderName">DRAW</td><td class="detailHeaderType">Constant</td></tr></table><div class="detailBody"><code>public static const DRAW:String = avatarDisplayDraw</code><p></p><p></p><p>
		 Constant for draw event type.
		 </p><p><span class="label">See also</span></p><div class="seeAlso"><a href="AvatarDisplay.html#avatarDisplayDraw" target="">AvatarDisplay.avatarDisplayDraw</a></div></div><br/><br/><hr><br/><p></p><center class="copyright"><footer></footer><br/>Sun Feb 7 2010, 10:25 PM -08:00  </center></div></body></html><!--<br/>Sun Feb 7 2010, 10:25 PM -08:00  -->